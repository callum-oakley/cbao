;; This and and or are eager in both of their arguments. They should short
;; curcuit (but we need macros for that).
(def or
  (fn [a b]
    (if a a b)))

(def and
  (fn [a b]
    (if a b a)))

(def fib-rec
  (fn [n]
    (if (or (= 0 n) (= 1 n))
      n
      (+ (fib-rec (- n 1)) (fib-rec (- n 2))))))

(def fib-iter
  (fn [n]
    (def loop
      (fn [a b n]
        (if
          (= 0 n) a
          (= 1 n) b
          (loop b (+ a b) (- n 1)))))
    (loop 0 1 n)))

`(fib-iter ~(+ 20 5))

; (defmacro defn [sym args & body]
;   `(def ~sym (fn ~args ~@body)))
;
; (defmacro do [& body]
;   `((fn [] ~@body))
;
; (defmacro let [bindings & body]
;   `(do
;      (def ~@bindings)
;      ~@body))
;
; (defmacro when [condition & body]
;   `(if ~condition
;      (do ~@body)
;      nil))
